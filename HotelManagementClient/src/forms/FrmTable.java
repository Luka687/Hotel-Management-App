/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import communication.Controller;
import communication.Operation;
import communication.Response;
import domain.Board;
import domain.GenericEntity;
import domain.Guest;
import domain.Reservation;
import domain.Room;
import domain.User;
import forms.component.table.BoardTableModel;
import forms.component.table.GuestTableModel;
import forms.component.table.ReservationTableModel;
import forms.component.table.RoomTableModel;
import forms.controller.FormController;
import forms.modes.FormMode;
import forms.modes.TableType;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Luka
 */
public class FrmTable extends javax.swing.JFrame {
    private TableType t;
    private final User u;

    /**
     * Creates new form FrmGuestTable
     * @param t
     * @param u
     */
    public FrmTable(TableType t, User u) {
        this.u = u;
        initComponents();
        this.t = t;
        this.setTitle("Table View Form");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        try {        
            setUpTable();
        } catch (Exception ex) {
            Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_box_filter = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        txt_filter = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btn_select = new javax.swing.JButton();
        combo_box_f = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter filter condition: ");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        combo_box_filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jScrollPane1.setViewportView(tbl);

        jButton1.setText("Filter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back To Main Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btn_select.setText("Select Guest");
        btn_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectActionPerformed(evt);
            }
        });

        combo_box_f.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(combo_box_filter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(combo_box_f, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_select, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                            .addComponent(txt_filter))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_filter)
                        .addComponent(combo_box_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_box_filter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btn_select, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
        new FrmMain(u).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean good_filter = true;
        if (combo_box_f.getSelectedIndex() == 0 || combo_box_f.getSelectedIndex() == 1){
            try{
                Integer.parseInt(txt_filter.getText());
            }
            catch(Exception e){
                good_filter = false;
                try{
                    Double.parseDouble(txt_filter.getText());
                    good_filter = true;
                }
                catch(Exception ex){
                    try{
                        new SimpleDateFormat("yyyy-MM-dd").parse(txt_filter.getText());
                        good_filter = true;
                    }
                    catch (Exception exe){
                        JOptionPane.showMessageDialog(rootPane, "Invalid filter value!");
                    }
                }
            }
        }
        if (good_filter){
            switch(t){
                case GUEST_TABLE:
                    try {
                        FormController.getInstance().filterGuests(combo_box_filter, txt_filter, tbl, rootPane, combo_box_f);
                    } catch (IOException ex) {
                        Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                case BOARD_TABLE:
                    try {
                        FormController.getInstance().filterBoards(combo_box_filter, txt_filter, tbl, rootPane, combo_box_f);
                    } catch (IOException ex) {
                        Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                case RESERVATION_TABLE:
                    try {
                        FormController.getInstance().filterReservations(combo_box_filter, txt_filter, tbl, rootPane, combo_box_f);
                    } catch (IOException ex) {
                        Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                case ROOM_TABLE:
                    try {
                        FormController.getInstance().filterRooms(combo_box_filter, txt_filter, tbl, rootPane, combo_box_f);
                    } catch (IOException ex) {
                        Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    break;
            }
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            setUpTable();
        } catch (Exception ex) {
            Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectActionPerformed
        switch(t){
            case GUEST_TABLE:
                try {
                    FormController.getInstance().selectGuest(tbl, this, rootPane, u);
                } catch (IOException ex) {
                    Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case BOARD_TABLE:
                try {
                    FormController.getInstance().selectBoard(tbl, this, rootPane, u);
                } 
                catch (IOException ex) {
                    Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case RESERVATION_TABLE:
                try {
                    FormController.getInstance().selectReservation(tbl, this, rootPane, u);
                } 
                catch (IOException ex) {
                    Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            case ROOM_TABLE:
                try {
                    FormController.getInstance().selectRoom(tbl, this, rootPane, u);
                } 
                catch (IOException ex) {
                    Logger.getLogger(FrmTable.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
        }
    }//GEN-LAST:event_btn_selectActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmTable().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_select;
    private javax.swing.JComboBox<String> combo_box_f;
    private javax.swing.JComboBox<String> combo_box_filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txt_filter;
    // End of variables declaration//GEN-END:variables

    private void setUpTable() throws IOException, Exception {
        String [] items = {"<", ">", "="};
        combo_box_f.setModel(new DefaultComboBoxModel(items));
        combo_box_f.setSelectedIndex(-1);
        switch(t){
            case GUEST_TABLE:
                FormController.getInstance().setGuestTableModel(tbl, Operation.GET_ALL_GUESTS, new Guest());
                combo_box_filter.setModel(new DefaultComboBoxModel(((GuestTableModel) tbl.getModel()).getColumn_names()));                
                btn_select.setText("Select Guest");
                break;
            case BOARD_TABLE:
                FormController.getInstance().setBoardTableModel(tbl, Operation.GET_ALL_BOARDS, new Board());
                combo_box_filter.setModel(new DefaultComboBoxModel(((BoardTableModel) tbl.getModel()).getColumn_names()));
                btn_select.setText("Select Board");
                break;
            case RESERVATION_TABLE:
                FormController.getInstance().setReservationTableModel(tbl, Operation.GET_ALL_RESERVATIONS, new Reservation());
                combo_box_filter.setModel(new DefaultComboBoxModel(((ReservationTableModel) tbl.getModel()).getColumn_names()));                
                btn_select.setText("Select Reservation");
                break;
            case ROOM_TABLE:
                FormController.getInstance().setRoomTableModel(tbl, Operation.GET_ALL_ROOMS, new Room());
                combo_box_filter.setModel(new DefaultComboBoxModel(((RoomTableModel) tbl.getModel()).getColumn_names()));                
                btn_select.setText("Select Room");
                break;
        }
        combo_box_filter.setSelectedIndex(-1);
    }
}
