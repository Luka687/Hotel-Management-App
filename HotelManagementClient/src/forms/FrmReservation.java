/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import communication.Controller;
import communication.Operation;
import communication.Response;
import domain.Board;
import domain.GenericEntity;
import domain.Guest;
import domain.Reservation;
import domain.ReservationItem;
import domain.Room;
import domain.User;
import forms.component.table.ReservationItemTableModel;
import forms.modes.FormMode;
import forms.modes.TableType;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Luka
 */
public class FrmReservation extends javax.swing.JFrame {
    private FormMode f;
    private Reservation r;
    private final User u;
    /**
     * Creates new form FrmReservation
     * @param f
     * @param r
     * @param u
     */
    public FrmReservation(FormMode f, Reservation r, User u) {
        this.u = u;
        this.r = r;
        this.f = f;
        this.setTitle("Reservation Form");       
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        try {
            setUpForm();
        } catch (Exception ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        combo_box_guest2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_box_board2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        combo_box_room = new javax.swing.JComboBox<>();
        btn_add_item = new javax.swing.JButton();
        btn_delete_item = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btn_add = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btn_enable = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btn_view_all = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo_box_guest1 = new javax.swing.JComboBox<>();
        combo_box_board1 = new javax.swing.JComboBox<>();
        txt_check_in = new javax.swing.JTextField();
        txt_check_out = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_items = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Select Guest: ");

        combo_box_guest2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Select Board: ");

        combo_box_board2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Select Room: ");

        combo_box_room.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_add_item.setText("Add Reservation Item");
        btn_add_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_itemActionPerformed(evt);
            }
        });

        btn_delete_item.setText("Delete Reservation Item");
        btn_delete_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_itemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_box_board2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_box_guest2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_box_room, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btn_add_item, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_delete_item, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(combo_box_guest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combo_box_board2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(combo_box_room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_add_item)
                .addGap(18, 18, 18)
                .addComponent(btn_delete_item)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btn_add.setText("Add Reservation");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(btn_cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_add)
                .addGap(18, 18, 18)
                .addComponent(btn_cancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_enable.setText("Enable Changes");
        btn_enable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enableActionPerformed(evt);
            }
        });

        btn_save.setText("Save Changes");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_enable, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_save)
                .addGap(18, 18, 18)
                .addComponent(btn_enable)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_view_all.setText("View All Reservations");
        btn_view_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_view_allActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete Reservation");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_view_all, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                    .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_view_all)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reservation Form");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Select Guest: ");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select Board: ");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Check In Date: ");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Check Out Date: ");

        combo_box_guest1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_guest1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_box_guest1ItemStateChanged(evt);
            }
        });

        combo_box_board1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_box_board1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_box_board1ItemStateChanged(evt);
            }
        });

        txt_check_in.setToolTipText("Format yyyy-MM-dd");

        txt_check_out.setToolTipText("Format yyyy-MM-dd");

        tbl_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_items);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(combo_box_guest1, 0, 497, Short.MAX_VALUE)
                                    .addComponent(combo_box_board1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_check_in)
                                    .addComponent(txt_check_out))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(combo_box_guest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_box_board1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_check_in, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_check_out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_box_board1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_box_board1ItemStateChanged
        combo_box_board2.setSelectedIndex(combo_box_board1.getSelectedIndex());
    }//GEN-LAST:event_combo_box_board1ItemStateChanged

    private void btn_add_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_itemActionPerformed
        try {
            if(combo_box_guest2.getSelectedIndex() < 0 || combo_box_board1.getSelectedIndex() < 0 || combo_box_room.getSelectedIndex() < 0){
                JOptionPane.showMessageDialog(rootPane, "You must fill out all fields in the reservation item form!");
            }
            else{
                ReservationItem ri = new ReservationItem();
                Board b = (Board) getEntity(combo_box_board1.getSelectedIndex(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS));
                Guest g = (Guest) getEntity(combo_box_guest2.getSelectedIndex(), Controller.getInstance().GenericOperation(new Guest(), Operation.GET_ALL_GUESTS));
                Room room = (Room) getEntity((String) combo_box_room.getSelectedItem(), Controller.getInstance().GenericOperation(new Room(), Operation.GET_ALL_ROOMS));
                ri.setBoard(b);
                ri.setGuest(g);
                ri.setRoom(room);
                r.getReservation_items().add(ri);
                ReservationItemTableModel rtm = (ReservationItemTableModel) tbl_items.getModel();
                rtm.addReservationItem(ri);
                rtm.fireTableDataChanged();  
            }           
        } catch (IOException ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_add_itemActionPerformed

    private void btn_delete_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_itemActionPerformed
        if(tbl_items.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(rootPane, "You must select item for deletion!");
        }
        else{
            r.getReservation_items().remove(tbl_items.getSelectedRow());
            ReservationItemTableModel rtm = (ReservationItemTableModel) tbl_items.getModel();
            rtm.getReservationItems().remove(tbl_items.getSelectedRow());
            rtm.fireTableDataChanged();            
        }

    }//GEN-LAST:event_btn_delete_itemActionPerformed

    private void btn_enableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enableActionPerformed
        f = FormMode.EDIT_MODE;
        try {
            setUpForm();
        } catch (Exception ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_enableActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        if (txt_check_in.getText().equals("") || txt_check_out.getText().equals("") || 
                combo_box_board1.getSelectedIndex() < 0 || combo_box_guest1.getSelectedIndex() < 0 || (((ReservationItemTableModel) (tbl_items.getModel())).getRowCount() <= 0)){
            JOptionPane.showMessageDialog(rootPane, "All fields are mandatory!");
        }
        else{
            try {
                Date check_in = new SimpleDateFormat("yyyy-MM-dd").parse(txt_check_in.getText());
                Date check_out = new SimpleDateFormat("yyyy-MM-dd").parse(txt_check_out.getText());
                if (check_in.before(new Date()) || check_out.before(new Date()) || !check_in.before(check_out)){
                    JOptionPane.showMessageDialog(rootPane, "Invalid dates!");
                }
                else{
                    r.setBoard((Board) getEntity(combo_box_board1.getSelectedIndex(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS)));
                    r.setGuest((Guest) getEntity(combo_box_guest2.getSelectedIndex(), Controller.getInstance().GenericOperation(new Guest(), Operation.GET_ALL_GUESTS)));
                    r.setCheck_in_date(check_in);
                    r.setCheck_out_date(check_out);
                    Response response = Controller.getInstance().GenericOperation(r, Operation.EDIT_RESERVATION);
                    
                    Response res_items = Controller.getInstance().GenericOperation(new ReservationItem(), Operation.GET_ALL_RESERVATION_ITEMS);
                    for(GenericEntity res_item : (List <GenericEntity>) res_items.getResult()){
                        if(((ReservationItem) res_item).getBoard().getId() == r.getBoard().getId() &&
                                ((ReservationItem) res_item).getGuest().getId() == r.getGuest().getId()){
                            Controller.getInstance().GenericOperation((ReservationItem) res_item, Operation.DELETE_RESERVATION_ITEM);
                        }
                    }
                    Controller.getInstance().GenericOperation(r.getReservation_items(), Operation.ADD_RESERVATION_ITEM);
                    
                    if (response.getException() != null){
                        JOptionPane.showMessageDialog(rootPane, response.getException().getMessage());
                        throw new Exception(response.getException().getMessage());
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, response.getMessage());
                        f = FormMode.VIEW_MODE;
                        try {
                            setUpForm();
                        } catch (Exception ex) {
                            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
                        }                        
                    }
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(rootPane, "Date must be in dd-MM-yyyy format!");
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if (txt_check_in.getText().equals("") || txt_check_out.getText().equals("") || 
                combo_box_board1.getSelectedIndex() < 0 || combo_box_guest1.getSelectedIndex() < 0 || (((ReservationItemTableModel) (tbl_items.getModel())).getRowCount() <= 0)){
            JOptionPane.showMessageDialog(rootPane, "All fields are mandatory!");
        }
        else{
            try {
                Date check_in = new SimpleDateFormat("yyyy-MM-dd").parse(txt_check_in.getText());
                Date check_out = new SimpleDateFormat("yyyy-MM-dd").parse(txt_check_out.getText());
                if (check_in.before(new Date()) || check_out.before(new Date()) || !check_in.before(check_out)){
                    JOptionPane.showMessageDialog(rootPane, "Invalid dates!");
                }
                else{
                    r.setBoard((Board) getEntity(combo_box_board1.getSelectedIndex(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS)));
                    r.setGuest((Guest) getEntity(combo_box_guest2.getSelectedIndex(), Controller.getInstance().GenericOperation(new Guest(), Operation.GET_ALL_GUESTS)));
                    r.setCheck_in_date(check_in);
                    r.setCheck_out_date(check_out);
                    Response response = Controller.getInstance().GenericOperation(r, Operation.ADD_RESERVATION);
                    if (response.getException() != null){
                        JOptionPane.showMessageDialog(rootPane, response.getException().getMessage());
                        throw new Exception(response.getException().getMessage());
                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, response.getMessage());
                                f = FormMode.VIEW_MODE;
                                try {
                                    setUpForm();
                                } catch (Exception ex) {
                                    Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
                                }
                    }
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(rootPane, "Date must be in dd-MM-yyyy format!");
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_view_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_view_allActionPerformed
        this.setVisible(false);
        this.dispose();
        new FrmTable(TableType.RESERVATION_TABLE, u).setVisible(true);    
    }//GEN-LAST:event_btn_view_allActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        try {
            int c = JOptionPane.showConfirmDialog(rootPane, "Are you sure you would like to delete this reservation?");
            if (c == JOptionPane.YES_OPTION){
                Response res = Controller.getInstance().GenericOperation(r, Operation.DELETE_RESERVATION);
                if (res.getException() == null){
                    JOptionPane.showMessageDialog(rootPane, res.getMessage());
                    this.setVisible(false);
                    this.dispose();
                    new FrmTable(TableType.RESERVATION_TABLE, u).setVisible(true);
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, res.getException().getMessage());
                    throw new Exception(res.getException().getMessage());
                }                  
            }    
        } catch (IOException ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void combo_box_guest1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_box_guest1ItemStateChanged
        combo_box_guest2.setSelectedIndex(combo_box_guest1.getSelectedIndex());
    }//GEN-LAST:event_combo_box_guest1ItemStateChanged

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        f = FormMode.VIEW_MODE;
        try {
            setUpForm();
        } catch (Exception ex) {
            Logger.getLogger(FrmReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmReservation().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_add_item;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_delete_item;
    private javax.swing.JButton btn_enable;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_view_all;
    private javax.swing.JComboBox<String> combo_box_board1;
    private javax.swing.JComboBox<String> combo_box_board2;
    private javax.swing.JComboBox<String> combo_box_guest1;
    private javax.swing.JComboBox<String> combo_box_guest2;
    private javax.swing.JComboBox<String> combo_box_room;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_items;
    private javax.swing.JTextField txt_check_in;
    private javax.swing.JTextField txt_check_out;
    // End of variables declaration//GEN-END:variables

    private void setUpForm() throws IOException, Exception {
        tbl_items.setModel(new ReservationItemTableModel());
        combo_box_board2.setEnabled(false);        
        
        fillComboBox(combo_box_guest1, Controller.getInstance().GenericOperation(new Guest(), Operation.GET_ALL_GUESTS)); 
        fillComboBox(combo_box_board1, Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS));
        fillComboBox(combo_box_guest2, Controller.getInstance().GenericOperation(new Guest(), Operation.GET_ALL_GUESTS));
        fillComboBox(combo_box_board2, Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS));
        fillComboBox(combo_box_room, Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_ROOMS));
        
        combo_box_guest2.setEnabled(false);
        combo_box_board2.setEnabled(false);
        
        if (f == FormMode.ADD_MODE){            
            combo_box_board1.setSelectedIndex(-1);
            combo_box_board2.setSelectedIndex(combo_box_board1.getSelectedIndex()); 
            combo_box_guest1.setSelectedIndex(-1);
            combo_box_guest2.setSelectedIndex(combo_box_guest1.getSelectedIndex());
            combo_box_room.setSelectedIndex(-1);
            txt_check_in.setEnabled(true);
            txt_check_out.setEnabled(true);
            
            btn_delete.setEnabled(false);
            btn_enable.setEnabled(false);
            btn_cancel.setEnabled(true);
            btn_save.setEnabled(false);
            btn_add.setEnabled(true);
            btn_add_item.setEnabled(true);
            btn_delete_item.setEnabled(true);
            
            combo_box_board1.setEnabled(true);
            combo_box_guest1.setEnabled(true);
            combo_box_room.setEnabled(true);
        }  
        
        if (f == FormMode.EDIT_MODE){
            btn_delete.setEnabled(true);
            btn_enable.setEnabled(false);
            btn_cancel.setEnabled(true);
            btn_save.setEnabled(true);
            btn_add.setEnabled(false);
            btn_add_item.setEnabled(true);
            btn_delete_item.setEnabled(true);
            txt_check_in.setEnabled(true);
            txt_check_out.setEnabled(true);
            fillTable(tbl_items, r.getReservation_items());
            
            combo_box_board1.setSelectedIndex(getEntityIndex(r.getBoard(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS)));
            combo_box_board2.setSelectedIndex(combo_box_board1.getSelectedIndex()); 
            combo_box_guest1.setSelectedIndex(getEntityIndex(r.getGuest(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_GUESTS)));
            combo_box_guest2.setSelectedIndex(combo_box_guest1.getSelectedIndex());
            combo_box_room.setSelectedIndex(-1);
            txt_check_in.setText(new SimpleDateFormat("yyyy-MM-dd").format(r.getCheck_in_date()));
            txt_check_out.setText(new SimpleDateFormat("yyyy-MM-dd").format(r.getCheck_out_date()));
            
            combo_box_board1.setEnabled(true);   
            combo_box_guest1.setEnabled(true);
            combo_box_room.setEnabled(true);
        }
        
        if (f == FormMode.VIEW_MODE){
            btn_delete.setEnabled(false);
            btn_enable.setEnabled(true);
            btn_cancel.setEnabled(false);
            btn_save.setEnabled(false);
            btn_add.setEnabled(false);
            btn_add_item.setEnabled(false);
            btn_delete_item.setEnabled(false);
            txt_check_in.setEnabled(false);
            txt_check_out.setEnabled(false);
            fillTable(tbl_items, r.getReservation_items());
            
            combo_box_board1.setSelectedIndex(getEntityIndex(r.getBoard(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_BOARDS)));
            combo_box_board2.setSelectedIndex(combo_box_board1.getSelectedIndex()); 
            combo_box_guest1.setSelectedIndex(getEntityIndex(r.getGuest(), Controller.getInstance().GenericOperation(new Board(), Operation.GET_ALL_GUESTS)));
            combo_box_guest2.setSelectedIndex(combo_box_guest1.getSelectedIndex());
            combo_box_room.setSelectedIndex(-1);
            txt_check_in.setText(new SimpleDateFormat("dd-MM-yyyy").format(r.getCheck_in_date()));
            txt_check_out.setText(new SimpleDateFormat("dd-MM-yyyy").format(r.getCheck_out_date()));
            
            combo_box_board1.setEnabled(false);
            combo_box_guest1.setEnabled(false);
            
            combo_box_room.setEnabled(false);
        }
    }

    private void fillComboBox(JComboBox j, Response r) {
        List <String> gs = new ArrayList();
        for (GenericEntity g: (List <GenericEntity>)r.getResult()){
            if (g instanceof Room room){
                if (room.isOccupied() == true){
                    continue;
                }
            }
            gs.add(g.toString());
        }
        j.setModel(new DefaultComboBoxModel(gs.toArray()));
    }
    
    private void fillTable(JTable tbl, List <ReservationItem> r){
        ReservationItemTableModel rtm = (ReservationItemTableModel) tbl.getModel();
        for(ReservationItem i: r){
            rtm.addReservationItem(i);
        }
    }

    private GenericEntity getEntity(int i, Response r){
        GenericEntity g = null;
        for (int k = 0; k < ((List <GenericEntity>)r.getResult()).size(); k++){
            if (i == k){
                g = ((List <GenericEntity>)r.getResult()).get(i);
            }
        }
        return g;
    }
    
        private GenericEntity getEntity(String i, Response r){
        GenericEntity g = null;
        for (GenericEntity k: (List <GenericEntity>) r.getResult()){
            if(k.toString().equals(i)){
                g = k;
            }
        }
        return g;
    }
    
    private int getEntityIndex(GenericEntity e, Response r){
        int g = -1;
        for (GenericEntity y: (List <GenericEntity>) r.getResult()){
            if(e.getTableId().equals(y.getTableId())){
                g = ((List <GenericEntity>) r.getResult()).indexOf(y);
            }
        }
        return g;
    }
}
